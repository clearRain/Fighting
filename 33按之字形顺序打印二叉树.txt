# -*- coding:utf-8 -*-
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None
class Solution:
    def Print(self, pRoot):
        if pRoot is None:
            return []
        root = pRoot
        queue = []
        res = []
        queue.append(root)
        current_level = 0
        while len(queue)!=0:
            numNodes = len(queue)
            current_level+=1
            temp = []
            for i in range(numNodes):
                curNode = queue.pop(0)
                temp.append(curNode.val)
                if curNode.left:
                    queue.append(curNode.left)
                if curNode.right:
                    queue.append(curNode.right)
            if current_level%2==1:
                res.append(temp)
            else:
                res.append(temp[::-1])
        return res
            
        