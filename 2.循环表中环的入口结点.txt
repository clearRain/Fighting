/*
struct ListNode {
    int val;
    struct ListNode *next;
    ListNode(int x) :
        val(x), next(NULL) {
    }
};
*/
class Solution {
public:
    ListNode* MeetingNode(ListNode* pHead){
        if(pHead==NULL ||pHead->next==NULL) return NULL;
        ListNode* p_fast = pHead->next;
        ListNode* p_slow = pHead;
        while(p_fast!=p_slow){
            p_fast = p_fast->next;
            if(p_fast==NULL) return NULL;
            else{
                p_fast = p_fast->next;
                if(p_fast==NULL) return NULL;
            }
            p_slow = p_slow->next;
        }
        
        return p_slow;
    }
public:
    ListNode* EntryNodeOfLoop(ListNode* pHead)
    {
        ListNode* meetingNode = MeetingNode(pHead);
        if(meetingNode==NULL){
            return NULL;
        }
        
        ListNode* ActivateNode = meetingNode->next;
        int LoopLength=1;
        while(ActivateNode!=meetingNode){
            ActivateNode = ActivateNode->next;
            LoopLength++;
        }
        
        ListNode* p_fast = pHead;
        ListNode* p_slow = pHead;
        for(int i=0;i<LoopLength-1;i++){
            p_fast = p_fast->next;
        }
        while(p_fast!=p_slow){
            p_fast = p_fast->next;
            p_slow = p_slow->next;
        }
        return p_fast;
        
    }
};